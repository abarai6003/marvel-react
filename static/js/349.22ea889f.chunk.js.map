{"version":3,"file":"static/js/349.22ea889f.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/errorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import { Component } from \"react\"\r\nimport ErrorMessage from \"../errorMessage/errorMessage\"\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo)\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import img from \"./error.gif\"\r\nimport { Component } from \"react\"\r\n\r\nclass ErrorMessage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<img\r\n\t\t\t\tsrc={img}\r\n\t\t\t\talt='error'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: \"block\",\r\n\t\t\t\t\twidth: \"250px\",\r\n\t\t\t\t\theight: \"250px\",\r\n\t\t\t\t\tobjectFit: \"contain\",\r\n\t\t\t\t\tmargin: \"0 auto\"\r\n\t\t\t\t}}></img>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ErrorMessage\r\n","import \"./comicsList.scss\"\nimport useMarvelService from \"../../services/MarvelService\"\nimport { Link } from \"react-router-dom\"\nimport Spinner from \"../spinner/Spinner\"\nimport ErrorMessage from \"../errorMessage/errorMessage\"\nimport { useEffect, useState } from \"react\"\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([])\n\tconst [newItemLoading, setNewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(0)\n\tconst [comicsEnded, setComicsEnded] = useState(false)\n\n\tconst { loading, error, getAllComics } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllComics(offset).then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = newComicsList => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\tfunction renderItems(arr) {\n\t\t// key is i doe to the api internal error with duplicate of the id  number\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li key={i} className='comics__item'>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\t\talt={item.title}\n\t\t\t\t\t\t\tclassName='comics__item-img'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='comics__item-name'>{item.title}</div>\n\t\t\t\t\t\t<div className='comics__item-price'>{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn <ul className='comics__grid'>{items}</ul>\n\t}\n\n\tconst items = renderItems(comicsList)\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\n\treturn (\n\t\t<div className='comics__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? \"none\" : \"block\" }}\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList\n","import \"./appBanner.scss\"\nimport avengers from \"../../resources/img/Avengers.png\"\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\"\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className='app__banner'>\n\t\t\t<img src={avengers} alt='Avengers' />\n\t\t\t<div className='app__banner-text'>\n\t\t\t\tNew comics every week!\n\t\t\t\t<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt='Avengers logo' />\n\t\t</div>\n\t)\n}\n\nexport default AppBanner\n","import ComicsList from \"../comicsList/ComicsList\"\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<ComicsList />\r\n\t\t\t</ErrorBoundary>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\tconst [error, setError] = useState(null)\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = \"GET\",\r\n\t\t\tbody = null,\r\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\r\n\t\t) => {\r\n\t\t\tsetLoading(true)\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\treturn data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetError(e.message)\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\treturn { error, loading, request, clearError }\r\n}\r\n","import { useHttp } from \"../components/hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\r\n\tconst _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\"\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.title,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} pages`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\"\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComic\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n"],"names":["ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","errorInfo","console","log","this","setState","render","_jsx","ErrorMessage","props","children","src","img","alt","style","display","width","height","objectFit","margin","ComicsList","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","_jsxs","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment","request","clearError","useHttp","setError","setLoading","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getComic"],"sourceRoot":""}